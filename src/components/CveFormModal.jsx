import React, { useState, useEffect } from "react";

const CveFormModal = ({ isOpen, onClose, onSave, editRecord }) => {
  // State variables for form inputs
  const [cveId, setCveId] = useState("");
  const [severity, setSeverity] = useState("");
  const [cvss, setCvss] = useState("");
  const [affectedPackages, setAffectedPackages] = useState("");
  const [cweId, setCweId] = useState("");

  // Effect to populate fields if editing an existing record
  useEffect(() => {
    if (editRecord) {
      setCveId(editRecord.cveId);
      setSeverity(editRecord.severity);
      setCvss(editRecord.cvss);
      setAffectedPackages(editRecord.affectedPackages);
      setCweId(editRecord.cweId);
    } else {
      // Reset form fields if not editing
      setCveId("");
      setSeverity("");
      setCvss("");
      setAffectedPackages("");
      setCweId("");
    }
  }, [editRecord]);

  // Handle the form submission
  const handleSubmit = (e) => {
    e.preventDefault();
    const newCveRecord = { cveId, severity, cvss, affectedPackages, cweId };
    onSave(newCveRecord); // Call the parent component's save function
    onClose(); // Close the modal after saving
  };

  if (!isOpen) return null; // If modal is not open, return null

  return (
    <div className="modal-backdrop">
      <div className="modal">
        <h2>{editRecord ? "Edit CVE Record" : "Add New CVE Record"}</h2>
        <form onSubmit={handleSubmit}>
          <div className="form-group">
            <label>CVE-ID:</label>
            <input
              type="text"
              value={cveId}
              onChange={(e) => setCveId(e.target.value)}
              required
            />
          </div>
          <div className="form-group">
            <label>Severity:</label>
            <input
              type="text"
              value={severity}
              onChange={(e) => setSeverity(e.target.value)}
              required
            />
          </div>
          <div className="form-group">
            <label>CVSS:</label>
            <input
              type="number"
              value={cvss}
              onChange={(e) => setCvss(e.target.value)}
              required
            />
          </div>
          <div className="form-group">
            <label>Affected Packages:</label>
            <input
              type="text"
              value={affectedPackages}
              onChange={(e) => setAffectedPackages(e.target.value)}
              required
            />
          </div>
          <div className="form-group">
            <label>CWE-ID:</label>
            <input
              type="text"
              value={cweId}
              onChange={(e) => setCweId(e.target.value)}
              required
            />
          </div>
          <div className="form-actions">
            <button type="submit">{editRecord ? "Update" : "Save"}</button>
            <button type="button" onClick={onClose}>
              Cancel
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default CveFormModal;
